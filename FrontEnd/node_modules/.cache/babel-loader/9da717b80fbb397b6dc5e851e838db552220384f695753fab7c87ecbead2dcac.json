{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umar.iqbal\\\\IdeaProjects\\\\Nabeeel\\\\New\\\\Frontend\\\\events-center\\\\src\\\\components\\\\Products.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Product from './Product';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport EventService from '../Services/EventService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Products = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n\n  // useEffect(() => {\n  //     EventService.getEvents()\n  //     .then((response) => {\n  //         setEvents(response.data);\n  //     })\n  //     .catch((error) => {\n  //         console.error('Error fetching events:', error);\n  //     });\n  // }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await EventService.getEvents();\n        // Check if response.data.events is an array or default to an empty array\n        setEvents(Array.isArray(response.data.events) ? response.data.events : []);\n      } catch (error) {\n        console.log(error);\n      }\n      setLoading(false);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-5 flex flex-wrap\",\n    children: events.map((event, index) => {\n      var _event$imageBeans$fin;\n      return /*#__PURE__*/_jsxDEV(Product, {\n        item: {\n          eventName: event.name,\n          description: event.info || 'No description available',\n          imageUrl: ((_event$imageBeans$fin = event.imageBeans.find(image => image.width === 1024)) === null || _event$imageBeans$fin === void 0 ? void 0 : _event$imageBeans$fin.url) || ''\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Products, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = Products;\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["React","Product","useState","useEffect","EventService","jsxDEV","_jsxDEV","Products","_s","events","setEvents","fetchData","response","getEvents","Array","isArray","data","error","console","log","setLoading","className","children","map","event","index","_event$imageBeans$fin","item","eventName","name","description","info","imageUrl","imageBeans","find","image","width","url","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/umar.iqbal/IdeaProjects/Nabeeel/New/Frontend/events-center/src/components/Products.jsx"],"sourcesContent":["import React from 'react';\nimport Product from './Product';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport EventService from '../Services/EventService'\n\nconst Products = () => {\n\n    const [events, setEvents] = useState([]);\n\n    // useEffect(() => {\n    //     EventService.getEvents()\n    //     .then((response) => {\n    //         setEvents(response.data);\n    //     })\n    //     .catch((error) => {\n    //         console.error('Error fetching events:', error);\n    //     });\n    // }, []);\n\n    useEffect(() => {\n        const fetchData = async () => {\n \n          try {\n            const response = await EventService.getEvents();\n            // Check if response.data.events is an array or default to an empty array\n            setEvents(Array.isArray(response.data.events) ? response.data.events : []);\n          } catch (error) {\n            console.log(error);\n          }\n          setLoading(false);\n        };\n\n      }, []);\n\n\n  return( \n  \n        <div className='p-5 flex flex-wrap'>\n            {\n                \n                events.map((event, index)=>(\n                    <Product\n                    key={index}\n                    item={{\n                    eventName: event.name,\n                    description: event.info || 'No description available',\n                    imageUrl: event.imageBeans.find((image) => image.width === 1024)?.url || ''\n                    }}\n                />\n                ))\n                \n            }\n        </div>\n\n  );\n};\n\nexport default Products;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,YAAY,MAAM,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAC,SAAS,CAAC,MAAM;IACZ,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAE5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,YAAY,CAACS,SAAS,CAAC,CAAC;QAC/C;QACAH,SAAS,CAACI,KAAK,CAACC,OAAO,CAACH,QAAQ,CAACI,IAAI,CAACP,MAAM,CAAC,GAAGG,QAAQ,CAACI,IAAI,CAACP,MAAM,GAAG,EAAE,CAAC;MAC5E,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;MACAG,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;EAEH,CAAC,EAAE,EAAE,CAAC;EAGV,oBAEMd,OAAA;IAAKe,SAAS,EAAC,oBAAoB;IAAAC,QAAA,EAG3Bb,MAAM,CAACc,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK;MAAA,IAAAC,qBAAA;MAAA,oBACpBpB,OAAA,CAACL,OAAO;QAER0B,IAAI,EAAE;UACNC,SAAS,EAAEJ,KAAK,CAACK,IAAI;UACrBC,WAAW,EAAEN,KAAK,CAACO,IAAI,IAAI,0BAA0B;UACrDC,QAAQ,EAAE,EAAAN,qBAAA,GAAAF,KAAK,CAACS,UAAU,CAACC,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,KAAK,KAAK,IAAI,CAAC,cAAAV,qBAAA,uBAAtDA,qBAAA,CAAwDW,GAAG,KAAI;QACzE;MAAE,GALGZ,KAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMb,CAAC;IAAA,CACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGL,CAAC;AAGd,CAAC;AAACjC,EAAA,CAlDID,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AAoDd,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}